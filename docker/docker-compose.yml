version: '3'
services:
  # api:
  #   image: php:apache
  #   container_name: apache-api
  #   ports:
  #     - "3000:80"
  #   volumes:
  #     - ./api:/var/www/html/
  #   networks:
  #    - network-nginx

  nginx-proxy-01:
    image: 'nginx:latest'
    restart: always
    container_name: nginx-proxy-01
    expose:
      - '8080'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - network-nginx

  exporter-nginx-proxy-01:
    image: nginx/nginx-prometheus-exporter:latest
    restart: always
    container_name: exporter-nginx-proxy-01
    expose:
      - 9113
    networks:
      - network-nginx
    command: '-nginx.scrape-uri=http://nginx-proxy-01:8080/stub_status'

  nginx-proxy-02:
    image: 'nginx:latest'
    restart: always
    container_name: nginx-proxy-02
    expose:
      - '8080'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - network-nginx
  
  exporter-nginx-proxy-02:
    image: nginx/nginx-prometheus-exporter:latest
    restart: always
    container_name: exporter-nginx-proxy-02
    expose:
      - 9113
    networks:
      - network-nginx
    command: '-nginx.scrape-uri=http://exporter-nginx-proxy-02:8080/stub_status'

  nginx-lb:
    image: 'nginx:latest'
    restart: always
    container_name: nginx-lb
    ports:
      - '80:80'
    volumes:
      - ./lb/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - network-nginx

  exporter-nginx-lb:
    image: nginx/nginx-prometheus-exporter:latest
    restart: always
    container_name: exporter-nginx-lb
    expose:
      - 9113
    networks:
      - network-nginx
    command: '-nginx.scrape-uri=http://nginx-lb:80/stub_status'

  prometheus:
    image: prom/prometheus:latest
    restart: always
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
    networks:
      - network-nginx
  
  node-exporter:
    image: prom/node-exporter:latest
    restart: always
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
      - network-nginx
    privileged: true
    expose:
      - 9100

  grafana:
    image: grafana/grafana:latest
    restart: always
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./grafana/dashboards/:/var/lib/grafana/dashboards
    networks:
      - network-nginx

networks:
  network-nginx:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.10.0/28
          gateway: 192.168.10.1      
